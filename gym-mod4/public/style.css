@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');

:root{
    --primary-color: #7159c1 ;
}

*{
    padding: 0;
    margin: 0;
    border: none;
}


body{
    background-color: var(--primary-color);
    font-family: 'Roboto', sans-serif;
}

header{
    background-color: white;
    width: 100%;
    padding: 32px; 
    text-align: center;
/* sem o border-box: box sizing o padding fica de acordo com o 100%, deixando ele torto, precisa adicionar esse atributo pra ficar certinho */
    box-sizing: border-box;
}

.links{
    font-size: 22px;
}

.links a + a{
    margin-left: 32px;
}

.links a{
    text-decoration: none;
    color: #777;
    position: relative;
}

.links a.active{
    font-weight: 700;
    color: var(--primary-color);
}

.links a:hover {
    color: var(--primary-color)
}

/* esse abaixo é pra criar pseudo elementos, com o after ele aparece depois e o before, ele aparece antes. Sempre precisa ter um CONTENT e pode ser vazio */

.links a::after{
    content: "";
    position: absolute;
    height: 2px;
    background-color: var(--primary-color);
    left: 0;
    bottom: -3px;
    width: 0;
}

.links a:hover::after{
    width: 100%;
    transition: width 300ms ease-out;
    /* transition pode ser aplicado em váárias coisas, melhro consultar o google, para especificar */
}

/* ===CARD==== */

.card{
    background-color: white;
    width: 800px;
    height: 400px;
    margin: 45px auto;
    /* Grid de divisão ao meio */
    display: grid;
    grid-template-columns: 1fr 1fr;
    /* sombra */
    box-shadow: 4px 4px 20px 0px black;
    /* animação, toda animação precisa de um nome que pode ser qualquer coisa */
    animation-name: up;
    animation-duration: 500ms;
    animation-timing-function: ease-in;

    /* Outra forma de escrever: animation: up 500ms ease-in;  */
    /* opacity: 0; */
    /* animation-fill-mode: backwards ou forwards;  esse atributo faz com que o elemento termine no estado do FROM ou do TO do keyframes abaixo quando o OPACITY está no card, mas nao precisa porque é uma propriedade a mais no css, melhor deixar embaixo*/

}

@keyframes up {
    from{
        opacity: 0;
        transform: translateY(15px);
    }

    to{
        opacity: 1;
    }   

}
